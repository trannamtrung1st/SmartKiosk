@model SK.WebAdmin.Areas.Location.Pages.Config.DetailModel
@{
    var apiUrl = WebAdmin.Settings.Instance.ApiUrl;
}
<script>
    function removeMedia(name) {
        $('.ssp-media[name=' + name + ']').remove();
    }

    function loadScreenSaverPlaylist() {
        var playlist = $('#screen-saver-playlist');
        var ssp = config.screen_saver_playlist;
        playlist.find('[name=ssp-mode]').val(ssp.mode).trigger('change');
        var medias = ssp.medias;
        addMedias(medias, true);
    }

    function attachScreenSaverHandlersToElFinder() {
        $(document).on('mouseup', '.elfinder-drag-helper', (e) => {
            console.log(e);
            var x = e.originalEvent.x;
            var y = e.originalEvent.y;
            var screenSaver = $('#tab-screen')[0];
            var eles = document.elementsFromPoint(x, y);
            if (eles.indexOf(screenSaver) > -1) {
                var files = $('.elfinder-cwd-file.ui-state-disabled:not(.directory)');
                dropItemsToSSP(files);
            }
        });
    }

    function dropItemsToSSP(files) {
        function random(max) {
            return Math.floor(Math.random() * Math.floor(max));
        }
        var medias = [];
        for (var i = 0; i < files.length; i++) {
            var hash = files[i].id;
            var url = fileManager.url(hash);
            var m = {};
            m.id = random(100000) + '_' + new Date().getTime();
            m.url = url;
            m.pos = 0;
            var imgExt = @Json.Serialize(FileExtensions.IMAGE_EXT);
            var videoExt = @Json.Serialize(FileExtensions.VIDEO_EXT);
            var ext = path.substr(path.lastIndexOf('.'), path.length);
            if (imgExt.indexOf(ext) > -1)
                m.type = @((int)SK.Data.PlaylistMediaType.Image);
            else m.type = @((int)SK.Data.PlaylistMediaType.Video);
            medias.push(m);
        }
        console.log(medias);
        addMedias(medias, false);
    }

    function addMedias(medias, append) {
        var mContainer = $('#media-container');
        for (var i = 0; i < medias.length; i++) {
            var m = medias[i];

            var mTag;
            if (m.type == @((int)SK.Data.PlaylistMediaType.Image))
                mTag = $('<img class="img-fluid w-100" src="' + m.url + '" />');
            else mTag = $('<video class="w-100" controls>').append(
                $('<source src="' + m.url + '" type="video/mp4">')
            );

            var newMediaEl = $('<div class="col-6 ssp-media" name="' + m.name + '" path="' + m.path + '" type="' + m.type + '">').append(
                $('<div class="card card-light">').append(
                    $('<div class="card-header py-2">').append(
                        $('<div class="row">').append(
                            $('<div class="col-2">').append(
                                $('<label>Vị trí</label>')
                            )
                        ).append(
                            $('<div class="col-4">').append(
                                $('<input type="number" class="w-100 px-2" step="1" min="1" value="' + m.position + '"/>')
                            )
                        ).append(
                            $('<div class="col-6">').append(
                                $('<button onclick="removeMedia(\'' + m.name + '\')" class="btn btn-sm btn-danger float-right">').append('Xóa')
                            )
                        )
                    )
                ).append(
                    $('<div class="card-body">').append(
                        mTag
                    )
                )
            );

            if (append)
                mContainer.append(newMediaEl);
            else mContainer.prepend(newMediaEl);
        }
    }

    function updateScreenSaverPlaylist() {
        confirmAlert().then((result) => {
            if (result.value) {
                var mediaTags = $('.ssp-media');
                var mode = $('[name=ssp-mode]').val();
                var medias = [];
                for (var i = 0; i < mediaTags.length; i++) {
                    var mTag = $(mediaTags[i]);
                    var media = {
                        name: mTag.attr('id'),
                        path: mTag.attr('path'),
                        type: mTag.attr('type'),
                        pos: parseInt(mTag.find('input[type=number]').val()),
                    };
                    medias.push(media);
                }
                var ssp = {
                    mode: mode,
                    medias: medias
                };
                console.log(ssp);
                changeLoading(true);
                $.ajax({
                    url: '@apiUrl/@ApiEndpoint.CONFIG_API/@Model.Id',
                    type: 'patch',
                    contentType: 'application/json',
                    data: JSON.stringify(model),
                    success: (data) => {
                        successAlert("@Html.Raw(GeneralMessage.UPDATE_SUCCESS)");
                    },
                    error: (data) => {
                        handleGeneralError(data);
                    },
                    complete: () => {
                        changeLoading(false);
                    }
                });
            }
        });
    }

</script>